#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>
RF24 radio(9, 10);
int count=0;
const byte rxAddr_p0[] = "0xB3B0";
const byte rxAddr_p1[] = "0xB3B1";
const byte rxAddr_p2[] = "0xB3B2";
const byte rxAddr_p3[] = "0xB3B3";
const byte rxAddr_p4[] = "0xB3B4";
const byte rxAddr_p5[] = "0xB3B5";
void ack(char text[]);
void setup()
{
  while (!Serial);
  Serial.begin(9600);
  radio.begin();
  radio.setRetries(10,5);
  radio.openReadingPipe(0, rxAddr_p0);
  radio.openReadingPipe(1, rxAddr_p1);
  radio.openReadingPipe(2, rxAddr_p2);
  radio.openReadingPipe(3, rxAddr_p3);
  radio.openReadingPipe(4, rxAddr_p4);
  radio.openReadingPipe(5, rxAddr_p5);
  radio.startListening();
  
}
void loop()
{
  radio.startListening();
  radio.openReadingPipe(0, rxAddr_p0);
  radio.openReadingPipe(1, rxAddr_p1);
  radio.openReadingPipe(2, rxAddr_p2);
  radio.openReadingPipe(3, rxAddr_p3);
  radio.openReadingPipe(4, rxAddr_p4);
  radio.openReadingPipe(5, rxAddr_p5);
  if (radio.available())
  {
    char text[32] = {0};
    radio.read(&text, sizeof(text));
    Serial.println(text);
    //Serial.println(count++);
    switch (text[1]) {
        case '1':
            
            radio.openWritingPipe(rxAddr_p0);
            radio.stopListening();
            delay(1);
            for(int i=0;i<2;i++){
              radio.write("ack1",sizeof("ack1"));
              delay(1);
            }
            break;
        case '2':
            
            radio.openWritingPipe(rxAddr_p1);
            radio.stopListening();
            delay(1);
            for(int i=0;i<2;i++){
              radio.write("ack2",sizeof("ack2"));
              delay(1);
            }
            break;
        case '3':
            radio.stopListening();
            delay(1);
            radio.openWritingPipe(rxAddr_p2);
            for(int i=0;i<2;i++){
              radio.write("ack3",sizeof("ack3"));
              //delay(1);
            }
            break;
    }
  }
}
